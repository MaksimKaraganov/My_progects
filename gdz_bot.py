import sqlite3
import telebot
from telebot import types
import mesh
import traceback
import datetime

def start_program():
    chat_id = '5209538522' #MAKSIM
    token = 'TOKEN'
    bot = telebot.TeleBot(token)
    bot.send_message(chat_id=chat_id, text = '—è –≤ —Å—Ç—Ä–æ—é')

    conn = sqlite3.connect('users.db', check_same_thread=False)
    cursor = conn.cursor()

    markup_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("ü§ñ–¶–¥–∑ü§ñ")
    item3 = types.KeyboardButton("üí∞–î–æ–Ω–∞—Ç—ãüí∞")
    item4 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    item5 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
    item6 = types.KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    markup_menu.add(item1, item3, item4, item5, item6)

    markup_try = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å")
    item2 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è")
    markup_try.add(item1, item2)
 

    def db_table_val(user_id: int, user_name: str, user_surname: str, username: str, datetime: str):
        cursor.execute('INSERT INTO users (user_id, user_name, user_surname, username, datetime) VALUES (?, ?, ?, ?, ?)', (user_id, user_name, user_surname, username, datetime))
        conn.commit()

    def get_text_messages(message):
        us_id = message.from_user.id
        info = cursor.execute('SELECT * FROM users WHERE user_id=?', (us_id, ))
        if info.fetchone() is None: 
            dt = datetime.datetime.now()
            dt = dt.strftime(dt.strftime("%d-%m-%Y"))
            us_name = message.from_user.first_name
            us_sname = message.from_user.last_name
            username = message.from_user.username
            bot.send_message(message.chat.id, f'üë§ –ù–∏–∫–Ω–µ–π–º: - @{message.from_user.username} \n'
                         + f'–í–∞—à–µ –∏–º—è  -  {message.from_user.first_name} \n'
                         +f'üîë ID: - {message.chat.id} \n' 
                         +f'üóì –ù–∞—á–∞–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ - {dt}\n'
                         +f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ - https://t.me/VM_international_bot?start={message.from_user.username}')
            db_table_val(user_id=us_id, user_name=us_name, user_surname=us_sname, username=username, datetime=dt)
        else:
            user_id = message.from_user.id
            reg_time = cursor.execute("SELECT `datetime` FROM `users` WHERE `user_id` = ? ", (user_id,))
            reg_time = cursor.fetchone()[0]
            bot.send_message(message.chat.id, f'üë§ –ù–∏–∫–Ω–µ–π–º: - @{message.from_user.username} \n'
                         + f'–í–∞—à–µ –∏–º—è  -  {message.from_user.first_name} \n'
                         +f'üîë ID: - {message.chat.id} \n' 
                         +f'üóì –ù–∞—á–∞–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ - {reg_time}\n'
                         +f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ - https://t.me/VM_international_bot?start={message.from_user.username}' )

    @bot.message_handler(commands=['start'])    
    def welcome(message):
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>ü§ñ, –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Ä–µ—à–∞—Ç—å —Ç–µ—Å—Ç—ã –ú–≠–®".format(message.from_user, bot.get_me()),
       parse_mode='html', reply_markup=markup_menu)
        if " " in message.text:
            referrer_candidate = message.text.split()[1]
            bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Ä–µ–∫–æ–º–∞–Ω–¥–∞—Ü–∏–µ–π @'+ referrer_candidate)
        #try:
         #  print(referrer_candidate)
            #(–∑–∞–ø–∏—Å—å —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)

    @bot.message_handler(content_types=['text'])
    def lalala(message):
        if message.text == 'ü§ñ–¶–¥–∑ü§ñ':
            msg = bot.send_message(message.from_user.id, '–∫–∏–Ω—å –º–Ω–µ —Å—Å—ã–ª–∫—É', reply_markup=types.ReplyKeyboardRemove())
            bot.register_next_step_handler(msg, process_name_step)
        if message.text == '‚úçÔ∏è–ö–æ–Ω—Å–ø–µ–∫—Ç–æ—Ä‚úçÔ∏è':
            msg = bot.send_message(message.from_user.id, '–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
        if message.text =='üí∞–î–æ–Ω–∞—Ç—ãüí∞':
            msg = bot.send_message(message.from_user.id, '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ qiwi.com/n/NOMIN843')
        if message.text =='–ü—Ä–æ—Ñ–∏–ª—å':
            get_text_messages(message)
        if message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ':
            msg = bot.send_message(message.from_user.id, '–ü–æ–º–æ–≥–∞–ª—ã—á - —ç—Ç–æ –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π VM productionüíª \n –£–º–µ–µ—Ç —Ä–µ—à–∞—Ç—å —Ç–µ—Å—Ç—ã –ú–≠–® \n –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞ - @Byg0r_Maksim \n –ò–¥–µ–π–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ - @Chebupela_777 \n –ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª https://t.me/VMproduct')
        if message.text == '–ü–æ–¥–¥–µ—Ä–∂–∫–∞':
            msg = bot.send_message(message.from_user.id, '—Ç–µ–±–µ —Ç—É–¥–∞-> @Chebupela_777')

    def process_name_step(message):
        try:
            us_id = message.from_user.id
            name = message.text
            answers = mesh.get_answers(name)
            for task_number, task in enumerate(answers):
                bot.send_message (message.chat.id, text = "‚ùì- –≤–æ–ø—Ä–æ—Å %d: %s" % (task_number + 1, task [0]))
                bot.send_message (message.chat.id, text = "\t‚úçÔ∏è- –æ—Ç–≤–µ—Ç—ã: %s\n" % task [1])
            bot.send_message(message.chat.id, '–¢–µ—Å—Ç —Ä–µ—à–µ–Ω',  reply_markup=markup_menu)
        except Exception as e:
            bot.reply_to(message, 'c —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π —á–æ—Ç–æ –Ω–µ —Ç–∞–∫')
            bot.send_message(message.chat.id, '–ü–æ–±—Ä—É–µ—Ç–µ —Å–∫–∏–Ω—É—Ç—å —Å–Ω–æ–≤–∞?', reply_markup=markup_try)
            bot.register_next_step_handler(message, process_age_step)

    def process_age_step(message):
        try:
            if message.text == '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å':
                msg = bot.send_message(message.from_user.id, '–∫–∏–Ω—å –º–Ω–µ —Å—Å—ã–ª–∫—É', reply_markup=types.ReplyKeyboardRemove())
                bot.register_next_step_handler(msg, process_name_step)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è':
                bot.send_message(message.chat.id, "–í—ã –≤ –Ω–∞—á–∞–ª—å–Ω–æ–º –º–µ–Ω—éüåê", reply_markup=markup_menu)
        except Exception as e:
            bot.send_message(message.chat.id, '—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫(')
    bot.polling()

while True:
    try:
        start_program()
    except Exception as e:
        erorr = str(traceback.format_exc())
        print(erorr)